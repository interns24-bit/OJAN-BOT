#include <SoftwareSerial.h>
#include <Cytron_PS2Shield.h>
#include "CytronMotorDriver.h"
#include <Adafruit_NeoPixel.h>

// Declare pin number of the NeoPixel LED and the number of LEDs
const int neoPin = 13;
const int numPixels = 2;

// Initialize the NeoPixel RGB LEDs
Adafruit_NeoPixel pixels(numPixels, neoPin, NEO_GRB + NEO_KHZ800);

// PS2 Controller Setup
Cytron_PS2Shield ps2(2, 3);  // Rx and Tx pins for PS2 communication

// Motor Driver Setup
CytronMD motor1(PWM_DIR, 5, 4);  // Motor 1 connected to pins 4 (PWM) and 5 (DIR)
CytronMD motor2(PWM_DIR, 6, 7);  // Motor 2 connected to pins 6 (PWM) and 7 (DIR)

void setup() {
  Serial.begin(9600);  // Start serial communication for debugging
  ps2.begin(9600);     // PS2 controller communication at 9600 baudrate
  Serial.println("PS2 Motor Control Initialized");
  pixels.begin();  // Initialize NeoPixel library
  pixels.clear();  // Set all pixel colors to 'off'
  pixels.show();   // Send the updated pixel colors to the hardware.
}

void loop() {
  // Read joystick values
  int joyX = ps2.readButton(PS2_JOYSTICK_LEFT_X_AXIS);  // Left Joystick X-axis
  int joyY = ps2.readButton(PS2_JOYSTICK_LEFT_Y_AXIS);  // Left Joystick Y-axis
  pixels.setBrightness(map(2, 0, 100, 0, 255));

  // Button-based motor control
  if (ps2.readButton(PS2_UP) == 0) {  // Button: Move forward
    controlMotors(255, 255, "Moving forward");
    setPixelsColor(200, 0, 0);                 // Red
  } else if (ps2.readButton(PS2_DOWN) == 0) {  // Button: Move backward
    controlMotors(-255, -255, "Moving backward");
    setPixelsColor(200, 0, 200);               // Magenta
  } else if (ps2.readButton(PS2_LEFT) == 0) {  // Button: Turn left
    controlMotors(80, 255, "Turning left");
    setPixelsColor(0, 200, 200);                // Cyan
  } else if (ps2.readButton(PS2_RIGHT) == 0) {  // Button: Turn right
    controlMotors(255, 80, "Turning right");
    setPixelsColor(0, 200, 0);  // Green
  }
  // Joystick-based motor control
  else if (joyY < 100) {  // Joystick: Move forward
    controlMotors(255, 255, "Moving forward (joystick)");
    setPixelsColor(200, 0, 0);  // Red
  } else if (joyY > 155) {      // Joystick: Move backward
    controlMotors(-255, -255, "Moving backward (joystick)");
    setPixelsColor(200, 0, 200);  // Magenta
  } else if (joyX < 100) {        // Joystick: Turn left
    controlMotors(80, 255, "Turning left (joystick)");
    setPixelsColor(0, 200, 200);  // Cyan
  } else if (joyX > 155) {        // Joystick: Turn right
    controlMotors(255, 80, "Turning right (joystick)");
    setPixelsColor(0, 200, 0);  // Green
  } else {                      // Stop motors if no input
    controlMotors(0, 0, "Motors stopped");
    setPixelsColor(0, 0, 0);  // Turn off NeoPixel
  }

  delay(10);  // Small delay to make reading smoother
}

// Function to control motors
void controlMotors(int speed1, int speed2, const char* action) {
  motor1.setSpeed(speed1);
  motor2.setSpeed(speed2);
  Serial.println(action);
}

// Function to set NeoPixel color
void setPixelsColor(int red, int green, int blue) {
  pixels.setPixelColor(0, pixels.Color(red, green, blue));
  pixels.setPixelColor(1, pixels.Color(red, green, blue));
  pixels.show();
}
